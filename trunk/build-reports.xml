<project name="jflat-reports" default="reports" basedir=".">

	<property file="build-code.properties" />
	<property file="build-test.properties"/>
	<property file="build-reports.properties"/>
	
	<import file="build-classpath.xml"/>
	
	<path id="cobertura.classpath">
		<fileset dir="${cobertura.dir}">
			<include name="cobertura.jar" />
			<include name="lib/**/*.jar" />
		</fileset>
	</path>

	<path id="pmd.classpath">
		<fileset dir="${pmd.dir}/lib" includes="*.jar">
		</fileset>
	</path>

	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
	<taskdef resource="checkstyletask.properties" classpath="${checkstyle.dir}/checkstyle-all-5.0.jar" />
	<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="pmd.classpath" />
	<taskdef name="cpd" classname="net.sourceforge.pmd.cpd.CPDTask" classpathref="pmd.classpath" />

	<target name="init">
		<mkdir dir="${test.classes}" />
		<mkdir dir="${junit.report.dir}" />
		<mkdir dir="${coverage.report.dir}" />
		<mkdir dir="${checkstyle.report.dir}" />
		<mkdir dir="${pmd.report.dir}" />
		<mkdir dir="${findbugs.report.dir}" />
		<mkdir dir="${instrument.dir}" />
	</target>
	
	<target name="clean" description="Erases contents of classes dir">
		<delete dir="${test.classes}" />
		<delete dir="${report.dir}" />
		<delete dir="${instrument.dir}" />
	</target>
	
		<!-- Cobrtura Instrumentation -->

	<target name="instrument" depends="init">
		<delete file="cobertura.ser">
		</delete>
		<cobertura-instrument todir="${instrument.dir}" datafile="cobertura.ser">
			<fileset dir="${build.classes}">
				<include name="**/*.class" />
				<exclude name="**/*Test.class" />
			</fileset>
		</cobertura-instrument>
	</target>
	
	
	<target name="compile.tests" depends="init" description="Compiles all unit test source">
			<javac srcdir="${src.test}" destdir="${test.classes}" classpathref="junit.class.path" />
	</target>
	
	<target name="test.instrumented" depends="instrument,compile.tests" description="Runs the unit tests">
		<junit forkMode="perBatch" printsummary="true" showoutput="false" fork="true" failureproperty="tests-failed">
			<sysproperty key="net.sourceforge.cobertura.datafile" file="cobertura.ser" />
			<classpath>
				<pathelement location="${instrument.dir}" />
				<path refid="junit.class.path" />
				<pathelement location="${build.classes}" />
				<pathelement location="${test.classes}" />
				<path refid="cobertura.classpath" />
			</classpath>
			<formatter type="xml" usefile="true" />
			<batchtest todir="${junit.report.dir}">
				<fileset dir="${src.test}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	<target name="test.report" depends="test.instrumented" description="generate HTML unit test reports">
			<junitreport todir="${junit.report.dir}">
				<fileset dir="${junit.report.dir}">
					<include name="TEST-*.xml" />
				</fileset>
				<report format="frames" todir="${junit.report.dir}" />
			</junitreport>
		</target>
	
	<target name="fail-on-error" depends="test.instrumented" if="tests-failed">
		<fail message="Some unit tests failed!" />
	</target>
	
	
	<target name="coverage.report" depends="instrument,test.instrumented">
		<cobertura-report format="${cobertura.report.format}" destdir="${coverage.report.dir}" srcdir="${src.java}" datafile="cobertura.ser" />
	</target>
	
	<target name="checkstyle" depends="init" description="Generates a report of code convention violations.">
		<checkstyle config="${checkstyle.dir}/sun_checks.xml" failureProperty="checkstyle.failure" failOnViolation="false">
			<formatter type="xml" tofile="${checkstyle.report.dir}/checkstyle-report.xml" />
			<fileset dir="${src.java}" includes="**/*.java" />
		</checkstyle>

		<style in="${checkstyle.report.dir}/checkstyle-report.xml" out="${checkstyle.report.dir}/checkstyle-report.html" style="${checkstyle.dir}/contrib/checkstyle-noframes.xsl" />

	</target>

	<!-- PMD -->

	<target name="pmd" depends="init">
		<pmd rulesetfiles="basic,braces,clone,codesize,coupling,design,imports,javabeans,logging-jakarta,strictexception,strings,unusedcode" targetJdk="1.6" failonerror="true">
			<formatter type="xml" toFile="${pmd.report.dir}/pmd-report.xml" />
			<fileset dir="${src.java}">
				<include name="**/*.java" />
			</fileset>
		</pmd>
		<xslt in="${pmd.report.dir}/pmd-report.xml" style="${pmd.dir}/etc/xslt/wz-pmd-report.xslt" out="${pmd.report.dir}/pmd-report.html" />
	</target>

	<!-- FindBugs -->

	<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask">
		<classpath>
			<fileset dir="${findbugs.dir}/lib">
				<include name="**/*.jar" />
			</fileset>
		</classpath>
	</taskdef>
	
	
	<!-- Checkstyle -->

	<!--  
	<checkstyle config="${checkstyle.dir}/sun_checks.xml">
		<fileset dir="${src.java}" includes="**/*.java" />
		<formatter type="plain" />
		<formatter type="xml" toFile="${checkstyle.report.dir}/checkstyle_report.xml" />
	</checkstyle>
-->

	<target name="findbugs" depends="init">
		<findbugs home="${findbugs.dir}" output="xml" failOnError="true" outputfile="${findbugs.report.dir}/findbugs-report.xml">
			<class location="${build.classes}" />
			<auxClasspath refId="class.path" />
			<sourcePath path="${src.java}" />
		</findbugs>
	</target>

	<target name="check.coverage" depends="coverage.report">
		<cobertura-check totallinerate="${totallinerate}" totalbranchrate="${totalbranchrate}" />
	</target>

	<!-- Run all reports -->
	<target name="reports" depends="test.report, fail-on-error, coverage.report, checkstyle, pmd, findbugs, check.coverage" />

</project>